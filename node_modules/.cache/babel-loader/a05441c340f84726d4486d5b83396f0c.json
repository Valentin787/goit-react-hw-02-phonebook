{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-02-phonebook/src/components/ContactList/ContactList.jsx\";\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactList = ({\n  filter,\n  contacts,\n  onDeleteContact\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: s.list,\n    children: contacts.filter(({\n      name\n    }) => name.toLowerCase().includes(filter.toLowerCase())).map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: s.item,\n      id: id,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: s.entry,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: s.number,\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onDeleteContact,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactList;\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-02-phonebook/src/components/ContactList/ContactList.jsx"],"names":["PropTypes","s","ContactList","filter","contacts","onDeleteContact","list","name","toLowerCase","includes","map","id","number","item","entry","propTypes","string","isRequired","arrayOf","shape","func"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,0BAAd;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA;AAApB,CAAD,KAA2C;AAC7D,sBACE;AAAI,IAAA,SAAS,EAAEJ,CAAC,CAACK,IAAjB;AAAA,cACGF,QAAQ,CACND,MADF,CACS,CAAC;AAAEI,MAAAA;AAAF,KAAD,KAAcA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BN,MAAM,CAACK,WAAP,EAA5B,CADvB,EAEEE,GAFF,CAEM,CAAC;AAAEC,MAAAA,EAAF;AAAMJ,MAAAA,IAAN;AAAYK,MAAAA;AAAZ,KAAD,kBACH;AAAI,MAAA,SAAS,EAAEX,CAAC,CAACY,IAAjB;AAAgC,MAAA,EAAE,EAAEF,EAApC;AAAA,8BACE;AAAG,QAAA,SAAS,EAAEV,CAAC,CAACa,KAAhB;AAAA,gCACE;AAAA,oBAAOP;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,UAAA,SAAS,EAAEN,CAAC,CAACW,MAAnB;AAAA,oBAA4BA;AAA5B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEP,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAA4BM,EAA5B;AAAA;AAAA;AAAA;AAAA,YAHH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAlBD;;KAAMT,W;AAoBNA,WAAW,CAACa,SAAZ,GAAwB;AACtBZ,EAAAA,MAAM,EAAEH,SAAS,CAACgB,MAAV,CAAiBC,UADH;AAEtBb,EAAAA,QAAQ,EAAEJ,SAAS,CAACkB,OAAV,CACRlB,SAAS,CAACmB,KAAV,CAAgB;AACdZ,IAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBC,UADT;AAEdL,IAAAA,MAAM,EAAEZ,SAAS,CAACgB,MAAV,CAAiBC,UAFX;AAGdN,IAAAA,EAAE,EAAEX,SAAS,CAACgB,MAAV,CAAiBC;AAHP,GAAhB,CADQ,EAMRA,UARoB;AAStBZ,EAAAA,eAAe,EAAEL,SAAS,CAACoB,IAAV,CAAeH;AATV,CAAxB;AAYA,eAAef,WAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filter, contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <li className={s.item} key={id} id={id}>\n            <p className={s.entry}>\n              <span>{name}</span>\n              <span className={s.number}>{number}</span>\n            </p>\n            <button type=\"button\" onClick={onDeleteContact}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}