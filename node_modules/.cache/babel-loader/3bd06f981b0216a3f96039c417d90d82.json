{"ast":null,"code":"import s from'./ContactList.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ContactList=function ContactList(_ref){var filter=_ref.filter,contacts=_ref.contacts,onDeleteContact=_ref.onDeleteContact;return/*#__PURE__*/_jsx(\"ul\",{className:s.list,children:contacts.filter(function(_ref2){var name=_ref2.name;return name.toLowerCase().includes(filter.toLowerCase());}).map(function(_ref3){var id=_ref3.id,name=_ref3.name,number=_ref3.number;return/*#__PURE__*/_jsxs(\"li\",{className:s.item,id:id,children:[/*#__PURE__*/_jsxs(\"p\",{className:s.entry,children:[/*#__PURE__*/_jsx(\"span\",{children:name}),/*#__PURE__*/_jsx(\"span\",{className:s.number,children:number})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onDeleteContact,children:\"Delete\"})]},id);})});};export default ContactList;","map":{"version":3,"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-02-phonebook/src/components/ContactList/ContactList.jsx"],"names":["s","ContactList","filter","contacts","onDeleteContact","list","name","toLowerCase","includes","map","id","number","item","entry"],"mappings":"AACA,MAAOA,CAAAA,CAAP,KAAc,0BAAd,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA2C,IAAxCC,CAAAA,MAAwC,MAAxCA,MAAwC,CAAhCC,QAAgC,MAAhCA,QAAgC,CAAtBC,eAAsB,MAAtBA,eAAsB,CAC7D,mBACE,WAAI,SAAS,CAAEJ,CAAC,CAACK,IAAjB,UACGF,QAAQ,CACND,MADF,CACS,mBAAGI,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAI,CAACC,WAAL,GAAmBC,QAAnB,CAA4BN,MAAM,CAACK,WAAP,EAA5B,CAAd,EADT,EAEEE,GAFF,CAEM,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOJ,IAAP,OAAOA,IAAP,CAAaK,MAAb,OAAaA,MAAb,oBACH,YAAI,SAAS,CAAEX,CAAC,CAACY,IAAjB,CAAgC,EAAE,CAAEF,EAApC,wBACE,WAAG,SAAS,CAAEV,CAAC,CAACa,KAAhB,wBACE,sBAAOP,IAAP,EADF,cAEE,aAAM,SAAS,CAAEN,CAAC,CAACW,MAAnB,UAA4BA,MAA5B,EAFF,GADF,cAKE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEP,eAA/B,oBALF,GAA4BM,EAA5B,CADG,EAFN,CADH,EADF,CAiBD,CAlBD,CAgCA,cAAeT,CAAAA,WAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ filter, contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase()))\n        .map(({ id, name, number }) => (\n          <li className={s.item} key={id} id={id}>\n            <p className={s.entry}>\n              <span>{name}</span>\n              <span className={s.number}>{number}</span>\n            </p>\n            <button type=\"button\" onClick={onDeleteContact}>\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  filter: PropTypes.string.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n"]},"metadata":{},"sourceType":"module"}