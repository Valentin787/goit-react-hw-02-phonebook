{"ast":null,"code":"var _jsxFileName = \"/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-02-phonebook/src/components/App/App.jsx\";\nimport ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport s from './App.module.css';\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: ''\n    };\n\n    this.normalize = name => {\n      const words = name.split(' ');\n      return words.map(word => {\n        const capLetter = word.charAt(0).toUpperCase();\n        const rest = word.substring(1);\n        return `${capLetter}${rest}`;\n      }).join(' ');\n    };\n\n    this.handleAddContact = (name, number) => {\n      const normName = this.normalize(name);\n      const isDuplicate = this.state.contacts.find(item => item.name === normName);\n\n      if (isDuplicate) {\n        alert(`${normName} is already in contacts.`);\n        return;\n      }\n\n      const newContact = {\n        name: normName,\n        number,\n        id: nanoid()\n      };\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, newContact]\n      }));\n    };\n\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n\n    this.handleDeleteContact = e => {\n      const id = e.target.parentNode.id;\n      this.setState(prevState => ({\n        contacts: prevState.contacts.filter(item => item.id !== id)\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.app,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: s.title,\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.handleAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: s.title,\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        filter: this.state.filter,\n        onFilter: this.handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n        filter: this.state.filter,\n        contacts: this.state.contacts,\n        onDeleteContact: this.handleDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/valentinkuzmich/Desktop/projects Go IT/goit-react-hw-02-phonebook/src/components/App/App.jsx"],"names":["ContactList","ContactForm","Filter","s","Component","nanoid","App","state","contacts","id","name","number","filter","normalize","words","split","map","word","capLetter","charAt","toUpperCase","rest","substring","join","handleAddContact","normName","isDuplicate","find","item","alert","newContact","setState","prevState","handleFilter","e","target","value","handleDeleteContact","parentNode","render","app","title"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,CAAP,MAAc,kBAAd;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BG,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,eAApB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OADQ,EAER;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,gBAApB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAFQ,EAGR;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,eAApB;AAAqCC,QAAAA,MAAM,EAAE;AAA7C,OAHQ,EAIR;AAAEF,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,IAAI,EAAE,gBAApB;AAAsCC,QAAAA,MAAM,EAAE;AAA9C,OAJQ,CADJ;AAONC,MAAAA,MAAM,EAAE;AAPF,KADkB;;AAAA,SAW1BC,SAX0B,GAWdH,IAAI,IAAI;AAClB,YAAMI,KAAK,GAAGJ,IAAI,CAACK,KAAL,CAAW,GAAX,CAAd;AACA,aAAOD,KAAK,CACTE,GADI,CACAC,IAAI,IAAI;AACX,cAAMC,SAAS,GAAGD,IAAI,CAACE,MAAL,CAAY,CAAZ,EAAeC,WAAf,EAAlB;AACA,cAAMC,IAAI,GAAGJ,IAAI,CAACK,SAAL,CAAe,CAAf,CAAb;AACA,eAAQ,GAAEJ,SAAU,GAAEG,IAAK,EAA3B;AACD,OALI,EAMJE,IANI,CAMC,GAND,CAAP;AAOD,KApByB;;AAAA,SAsB1BC,gBAtB0B,GAsBP,CAACd,IAAD,EAAOC,MAAP,KAAkB;AACnC,YAAMc,QAAQ,GAAG,KAAKZ,SAAL,CAAeH,IAAf,CAAjB;AACA,YAAMgB,WAAW,GAAG,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,IAApB,CAClBC,IAAI,IAAIA,IAAI,CAAClB,IAAL,KAAce,QADJ,CAApB;;AAIA,UAAIC,WAAJ,EAAiB;AACfG,QAAAA,KAAK,CAAE,GAAEJ,QAAS,0BAAb,CAAL;AACA;AACD;;AAED,YAAMK,UAAU,GAAG;AACjBpB,QAAAA,IAAI,EAAEe,QADW;AAEjBd,QAAAA,MAFiB;AAGjBF,QAAAA,EAAE,EAAEJ,MAAM;AAHO,OAAnB;AAMA,WAAK0B,QAAL,CAAcC,SAAS,KAAK;AAC1BxB,QAAAA,QAAQ,EAAE,CAAC,GAAGwB,SAAS,CAACxB,QAAd,EAAwBsB,UAAxB;AADgB,OAAL,CAAvB;AAGD,KA1CyB;;AAAA,SA4C1BG,YA5C0B,GA4CXC,CAAC,IAAI;AAClB,WAAKH,QAAL,CAAc;AACZnB,QAAAA,MAAM,EAAEsB,CAAC,CAACC,MAAF,CAASC;AADL,OAAd;AAGD,KAhDyB;;AAAA,SAkD1BC,mBAlD0B,GAkDJH,CAAC,IAAI;AACzB,YAAMzB,EAAE,GAAGyB,CAAC,CAACC,MAAF,CAASG,UAAT,CAAoB7B,EAA/B;AACA,WAAKsB,QAAL,CAAcC,SAAS,KAAK;AAC1BxB,QAAAA,QAAQ,EAAEwB,SAAS,CAACxB,QAAV,CAAmBI,MAAnB,CAA0BgB,IAAI,IAAIA,IAAI,CAACnB,EAAL,KAAYA,EAA9C;AADgB,OAAL,CAAvB;AAGD,KAvDyB;AAAA;;AAyD1B8B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAEpC,CAAC,CAACqC,GAAlB;AAAA,8BACE;AAAI,QAAA,SAAS,EAAErC,CAAC,CAACsC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,YAAY,EAAE,KAAKjB;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAI,QAAA,SAAS,EAAErB,CAAC,CAACsC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKlC,KAAL,CAAWK,MAA3B;AAAmC,QAAA,QAAQ,EAAE,KAAKqB;AAAlD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,WAAD;AACE,QAAA,MAAM,EAAE,KAAK1B,KAAL,CAAWK,MADrB;AAEE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWC,QAFvB;AAGE,QAAA,eAAe,EAAE,KAAK6B;AAHxB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAxEyB;;AA2E5B,eAAe/B,GAAf","sourcesContent":["import ContactList from 'components/ContactList';\nimport ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport s from './App.module.css';\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  normalize = name => {\n    const words = name.split(' ');\n    return words\n      .map(word => {\n        const capLetter = word.charAt(0).toUpperCase();\n        const rest = word.substring(1);\n        return `${capLetter}${rest}`;\n      })\n      .join(' ');\n  };\n\n  handleAddContact = (name, number) => {\n    const normName = this.normalize(name);\n    const isDuplicate = this.state.contacts.find(\n      item => item.name === normName,\n    );\n\n    if (isDuplicate) {\n      alert(`${normName} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: normName,\n      number,\n      id: nanoid(),\n    };\n\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, newContact],\n    }));\n  };\n\n  handleFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleDeleteContact = e => {\n    const id = e.target.parentNode.id;\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(item => item.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div className={s.app}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm onAddContact={this.handleAddContact} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={this.state.filter} onFilter={this.handleFilter} />\n        <ContactList\n          filter={this.state.filter}\n          contacts={this.state.contacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}